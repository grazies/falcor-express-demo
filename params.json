{
  "name": "Falcor-express-demo",
  "tagline": "Demonstration Falcor end point for a Netflix-style Application using express",
  "body": "# Falcor Express Middleware Demonstration\r\n\r\nThis project is a demonstration of how to create a stateless Virtual JSON Graph object on your application server using a Falcor Router and some express middleware.\r\n\r\n## Getting Started\r\n\r\nClone the repo: `https://github.com/Netflix/falcor-express-demo.git`\r\n\r\n``` sh\r\ncd falcor-express-demo\r\nnpm install\r\nnpm start\r\n```\r\n\r\nOpen your browser and visit: [http://localhost:9090](http://localhost:9090)\r\n\r\n## Notes\r\n\r\nChanging the `index.html` file will refresh the browser automatically using\r\n[LiveReload][2]. Changing the server `index.js` file will restart the server\r\nusing [nodemon][1].\r\n\r\nThis will download a webpage which makes several requests from data from the model.json resource on the application server, and prints the results to the console.  You will not see anything on your screen until you open up the developer console. Checkout the source of the website to see what types of operations can be performed on the model.json file on the server.\r\n\r\nFor more information on how the Router works and the structure of model.json, see the Router source at https://github.com/Netflix/falcor-router-demo.\r\n\r\n\r\n\r\n[1]: https://www.npmjs.com/package/nodemon    \"nodemon\"\r\n[2]: https://www.npmjs.com/package/livereload    \"livereload\"\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}